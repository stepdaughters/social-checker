from multiprocessing import Pool, Process, freeze_support, set_start_method, get_context
from multiprocessing import set_start_method
from requests.packages.urllib3.util.retry import Retry
import requests
import time
from proxy import getWorkingProxy
requests.packages.urllib3.disable_warnings()


def main():
	set_start_method("spawn")
	print("Checking Instagram names... No proxies needed.")
	filename = input("What is the filename?: ")
	usernames = open(f"wordlist/{filename}")
	pool = Pool(processes=100)
	lines = usernames.readlines()
	start = time.time()
	pool.map(request, lines)
	ttl = time.time() - start
	rps = len(lines) / ttl
	print(f"Checking is completed.")
	print(f"Took {ttl} seconds to check.")
	print(f"{rps} names checked/second.")


def request(line):
	#proxy = getWorkingProxy()
	#proxies = {
	#	"http": "http://" + proxy,
	#	"https": "https://" + proxy
	#}
	url = "https://www.instagram.com/"
	user = line.strip(actaeon
adonis
aeneas
aeacus
aeaean
aeetes
aegean
aegeus
aegina
aegis
aegisthus
aeneas
aeneid
aeolian
aeolus
aeschylus
aesculapius
aeson
aethiop
aethiopia
aethiopian
aethiopians
aethra
aetna
alcestis
amphion
antigone
arion
aristaeus
atlas
abessines
absyrtus
abydos
abyla
accompanying
according
accordingly
acestes
acetes
achates
achelous
acheron
acis
aconteus
acrisius
actaeon-like
addressing
admeta
admetus
adonais
adrastus
adspicit
advancing
after
agamedes
agenor
ages
aglaia
agni
ahriman
ai
ajacis
alas
albano
alcides
alcinous
aldrovandus
alecto
aleian
alfadur
alfdaur
alfheim
alighting
all-father
allegorical
alph
alphenor
alpheus
amalthea
amata
amathos
amazenus
amazons
ammon
amphiaraus
amphion
amphitrite
amphrysos
ampyx
amrita
amun
amymone
anaxarete
anceus
anchises
andraemon
angerbode
anglesey
antea
anteros
anthor
antilochus
antiope
anubis
aodh
apennines
apis
apple-orchard
apuleius
aquilo
arabs
arcadian
arcady
arcas
areopagus
arethusa
argolis
argonautic
argonauts
argos
arimanes
arimaspian
arimaspians
arion
aristaeus
armed
arrayed
arrived
arriving
aruns
ascertaining
asgard
asian
aske
assuming
assyrian
assyrians
astraea
astyages
asuras
athamas
athenaeum
athene
athenians
athor
athos
audhumbla
augeas
aulis
auster
autonoe
avatar
avatars
averni
avernus
avicenna
ay
bacchus
baldur
basilisk
bee-keeper
buddha
baal
babylonia
bacchanals
bacchantes
baldur
ballads
bards
baucis
bearing
beds
begone
bellerophon
bellerophontic
bellona
beltane
belus
benares
bending
benvenuto
bereaved
beroe
besides
better
bifrost
blackmore
blessed
blooming
bodies
boeotians
bosomed
bosphorus
boxed
bragi
brahma
brahman
brahmans
brahminical
brahmins
breaking
briareus
bright-haired
briseis
brothers
browning
buddhists
bulfinch
burning
byblos
byrsa
cadmus
callisto
camenae
camilla
castes
charybdis
clytie
cyclopse
cacus
cadmus
caicus
cairns
calchas
called
calpe
calydon
capaneus
capitolinus
capys
cares
carlos
carpathian
carved
castalia
castalian
casting
caves
cayster
cebriones
cecrops
celestials
celeus
cellini
centaurs
cephalus
cephisus
cestus
ceyx
chained
chaldean
cham
characteristics
charybdim
childe
childless
chimaera
chimaeras
chimeras
chios
chiron
chloe
choosers
christianity
christians
chryseis
chryses
ciconians
cimmerian
cimmerians
cimon
cithaeron
citheron
civility
clapped
clashing
cleomenes
clouds
clymene
clytie
cnidos
coasting
cocytus
colchian
colchians
colchis
colophon
columba
columns
companionship
comus
consequently
constitutional
cordelia
corea
corfu
corybantes
couched
covilham
cowper
cranes
creator
creusa
criticism
crocale
cromlech
cronos
crops
crotona
crushed
culdees
culling
cumaean
cyane
cybele
cyclopedia
cyclopses
cymon
cynosure
cynthian
cyrene
daedalus
daphne
deities
dido
druids
dryope
daedal
dalai
danae
danaos
danaus
danes
dardan
dardanelles
dardanus
darting
day-star
dea
dead-heavy
dearest
deemed
dei
deiphobus
dejanira
delos
delphos
demeter
demodocus
desolation
despairing
destruction
deucalion
developing
dia
diapason
dictys
didst
dimly
diomed
diomede
dione
dioscuri
dirce
discord
diseases
disgusted
dismounted
ditis
dodona
dolphins
doomed
dorceus
doth
drapa
drinking
driver
dropped
druidical
druids
dryads
dryope
elves
endymion
erisichthon
euryalus
eurydice
evander
early
eating
ecgtheow
edda
eddas
edged
egeria
egyptians
eilen
eisteddfod
eisteddfods
elements
eleusinian
eleusis
elis
elli
elvidner
elysium
embla
emerged
enceladus
enchanting
enchelians
encouraged
encroaching
endeavouring
endless
endowed
endymion
enforces
enjoy
enna
ennobling
enraged
epidaurus
epimetheus
epirus
epopeus
ercoco
erebus
eridanus
erinnyes
erinyes
eriphyle
eris
erisichthon
errors
erytheia
eryx
esepus
eteocles
etrurian
etruscans
euboic
eumaeus
euphorbus
euphrosyne
eurus
euryalus
eurylochus
eurynome
eurystheus
eurytion
euxine
evadne
evander
evenings
expels
expressions
extracts
fleece
fabius
facies
facilis
facing
fairer
falling
fanned
fasti
fates
fatigued
fauns
faunus
favonius
feeling
feels
fenelon
fenris
fensalir
finally
finding
finns
fixed
flies
flocks
flower
flowers
fluttering
following
fondles
foremost
forgets
forming
fostering
freki
freyr
friends
furies
goddesses
gorgons
greeks
garrick
gautama
geatland
geats
gebir
gengis
gentiles
gerda
geri
geryon
giallar
giants
gilding
girt
gives
glaucus
gleaming
gleipnir
gliding
gods
going
gordius
gorgon-shield
gorgons
goth
gotter
governed
government
graces
graeae
gratiano
grecians
greeks
griechenlands
griefs
griffins
gueber
guebers
gullinbursti
gulltopp
gyoll
harpies
hercules
haemon
haemonian
haemus
halcyone
halcyons
hallow-eve
hamadryads
hands
hangs
hapless
harmonia
harpies
harpocrates
has
haud
having
headlong
heaped
heardred
hearing
heavens
heaving
hebrus
heedless
heidrum
heimdall
hel
hela
helenus
heliades
helicon
heliopolis
hellas
helle
hellespont
helping
hemans
hephaestos
hereupon
hermione
hermod
hesiod
hesperia
hesperian
hesperides
hestia
hetware
hic
highlands
highness
hindus
hindustan
hippocrene
hippodamia
hippolyta
hippolytus
hippomenes
historical
hodur
holding
holds
homer
hours
hringham
hrunting
hugi
hugin
hunger
hyacinthus
hyale
hydras
hygeia
hygelac
hylas
hymettus
hyperborean
hyperboreans
hyperion
hyrieus
ibycus
iapetus
iasius
ibycus
icaria
icarius
icelos
icolmkill
idaean
idaeus
idas
ideals
iduna
il
ilioneus
ilium
ill-granted
illyria
imitating
imitations
immediately
imponere
inachus
incidit
increased
indra
infused
inhaling
innocence
ino
inspires
instantly
iobates
iolaus
iole
iona
ionia
ionian
iphigenia
iphis
iphitus
ipse
irritated
islands
isles
ismarus
ismenos
isthmian
isthmus
its
iulus
ixion
jameson
janiculum
japhet
jocasta
jonah
jonston
jotunheim
jove-born
jubal
judges
kalki
kedalion
kerman
killing
kneph
knowing
kubla
letters
linus
lotus-eaters
labours
lacked
laertes
laestrygonians
laius
lalla
lama
lamaism
lamas
lampetia
landing
landor
laodamia
laomedon
lapithae
lapiths
lately
latins
latinus
latmos
latona
lausus
lavinia
lavinium
laying
lays
leaning
leaps
leaving
lebadea
lebynthos
leda
lelaps
lemnos
lemur
lethaean
letters
leucadia
leucothea
liber
libethra
libyan
lichas
lies
lights
linked
living
locksley
logi
long-lost
longa
looked
looking
lorenzo
lotis
lotos
lotos-eaters
lotus-eaters
lovelier
loves
lucan
lucina
lusiad
lut
lycabas
lycaon
lycia
lycidas
lycomedes
lycus
lynceus
marsyas
medusa
melampus
mezentius
midas
minerva
monsters
mythology
macaulay
macedonian
machaon
maeander
maeonia
magnetism
mahadeva
mahometan
maia
maidens
maker
mantled
mantua
mantuan
manu
marmion
marmora
maro
marsyas
matsya
maud
meadows
medio
megaera
megara
melampus
melanthus
meleager
melicertes
melind
melisseus
melodies
memnon
memphian
menoeceus
mephitic
merope
mesmerism
metabus
metamorphoses
metanira
metempsychosis
methinks
methought
metis
mezentius
midgard
midsummer
milman
milo
minotaur
mnemosyne
moly
mombaza
momus
monstrum
months
morpheus
mortified
moved
moving
muiopotmos
mulciber
munin
musaeus
muses
muspelheim
myrmidons
mysia
narcissus
nb
naiades
naiads
nanna
naso
nativity
nausicaa
nausithous
naxian
naxos
nec
negus
nemea
nemean
neoptolemus
nepenthes
nephele
nephthys
nereids
nereus
nessus
nestorian
nidhogge
niffleheim
nightly
nile-stream
ninus
niobes
nisus
noctes
noman
norns
norse
north-east
north-star
northmen
nos
notus
nought
numa
nunnery
nymphs
nysaean
nyseian
oechalia
oedipus
oeneus
oenone
oenopion
oeta
oete
orion
observing
occasionally
oceanus
ocyrhoe
offered
olympiad
olympiads
olympian
olympus
omphale
ophion
ops
oread
oreads
orithyia
ormuzd
oromasdes
ossa
ossam
ossian
others
ours
out-swelling
outran
perseus
phaeacians
phoenix
proserpine
pygmalion
pythagoras
pactolus
paeon
paganism
palaemon
palamedes
pales
palinurus
pallas
pamphagus
panathenaea
pandean
panegyric
panope
panthus
paphlagonia
paphos
pariahs
parnassian
parnassus
parsees
passions
pasturage
patroclus
pegasean
peleus
pelias
pelio
pelion
peneus
penseroso
penthesilea
pentheus
penus
peplus
perched
perdix
periander
periphetes
perished
persephone
persians
phaeacian
phaeacians
phaedra
phaethusa
phaeton
phantasos
phaon
phidias
philemon
philoctetes
philoe
philosophers
phineus
phlegethon
phocis
phoebus
phoenician
phoenicians
phorbas
phrygia
phryxus
physical
pictish
pillars
pindar
pindus
pirene
pirithous
placing
pleased
pledged
pleiad
pleiads
plexippus
plutus
poems
poets
polestar
polites
polydectes
polydore
polyidus
polynices
polyxena
pontus
popery
poppies
portunus
preparing
presbyter
presented
presently
preserving
prester
previously
proceeding
proclaims
procris
proetus
protesilaus
proteus
providence
prudence
puranas
pursued
pursues
pygmaean
pygmies
pylades
pyramus
pyrrha
pyrrhus
pythagoreans
pythia
pythian
pythoness
quadrupedante
quem
quida
quiloa
quirinus
regions
rhoecus
railed
raising
rajputs
ravished
recovering
reeled
reformation
regardless
regillus
renouncing
reproaching
rescued
returned
returning
reullura
rhadamanthus
rhapsodists
rhodope
rhoecus
rhymes
riding
rings
rising
rivets
rolling
rolls
romans
romish
rookh
rutulians
scylla
sea-monster
simonides
skalds
sabrina
sacrifices
sadly)
	headers = {
		"User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36"
	}
	try:
		r = requests.get(url + user + "/", headers=headers, verify=False)
		status = r.status_code
		if (status == 404):
			print(f"{user} is available.")
			file = open("available.txt", "a")
			file.write(url + user + "\n")
			file.close()
		else:
			print(f"{user} is taken.")
	except Exception as e:
		print(f"Connection Error: {user}. Retrying.")
		request(user)


if __name__ == '__main__':
	freeze_support()
	main()
